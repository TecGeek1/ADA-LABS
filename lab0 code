
# 1.  Implement linear search and determine the time required to search an element.

import time
import random

def linear_search(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i
    return -1

arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]
x = 1
start = time.time()
result = linear_search(arr, x)
end = time.time()

execution_time = (end - start)*1000000

print("Execution Time: ", execution_time)

# 2.  Implement recursive Binary search and determine the time required to search an element.

import time

def binary_search(arr, left, right, target):
    if left <= right:
        mid = left + (right - left) // 2

        if arr[mid] == target:
            return mid

        elif arr[mid] > target:
            return binary_search(arr, left, mid - 1, target)

        else:
            return binary_search(arr, mid + 1, right, target)

    return -1

arr = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
target = 7

start_time = time.time()

result = binary_search(arr, 0, len(arr) - 1, target)

end_time = time.time()

time_taken = (end_time - start_time)*1000000

if result != -1:
    print(f"Element found at index {result}")
else:
    print("Element not found")

print(f"Time taken to search the element: {time_taken:.10f}")

