import time

def partition(arr, low, high):
    pivot = arr[high]
    i = low - 1

    for j in range(low, high):
        if arr[j] <= pivot:
            i += 1
            arr[i], arr[j] = arr[j], arr[i]

    arr[i + 1], arr[high] = arr[high], arr[i + 1]
    return i + 1

def quick_sort(arr, low, high):
    if low < high:
        pi = partition(arr, low, high)

        quick_sort(arr, low, pi - 1)
        quick_sort(arr, pi + 1, high)

arr = [10, 7, 8, 9, 1, 5, 12, 3, 2, 6]
n = len(arr)

start_time = time.time()

quick_sort(arr, 0, n - 1)

end_time = time.time()

time_taken = (end_time - start_time)*1000000

print("Sorted array:", arr)
print(f"Time taken to sort the elements: {time_taken:.10f}")


import time

def bubble_sort(arr):
    n = len(arr)
    for i in range(n - 1):
        swapped = False
        for j in range(n - 1 - i):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
                swapped = True
        if not swapped:
            break

arr = [10, 7, 8, 9, 1, 5, 12, 3, 2, 6]
n = len(arr)

start_time = time.time()

bubble_sort(arr)

end_time = time.time()

time_taken = (end_time - start_time)*1000000

print("Sorted array:", arr)
print(f"Time taken to sort the elements: {time_taken:.10f} seconds")

